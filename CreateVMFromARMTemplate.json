{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "loc": {
            "defaultValue": "[resourceGroup().location]",
            "type": "string",
            "metadata": {
                "description": "Location to for the resources."
            }
        },
        "vmname": {
            "type": "string",
            "metadata": {
                "description": "Name for the Virtual Machine."
            }
        },
        "adminusername": {
            "type": "string",
            "metadata": {
                "description": "User name for the Virtual Machine."
            }
        },
        "adminpassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password or ssh key for the Virtual Machine."
            }
        },
        "vmsize": {
            "defaultValue": "Standard_F4s_v2",
            "type": "string",
            "metadata": {
                "description": "Size for the Virtual Machine."
            }
        },
        "windowsosversion": {
            "defaultValue": "2016-Datacenter",
            "allowedValues": [
                "2008-R2-SP1",
                "2012-Datacenter",
                "2012-R2-Datacenter",
                "2016-Nano-Server",
                "2016-Datacenter-with-Containers",
                "2016-Datacenter",
                "2019-Datacenter"
            ],
            "type": "string",
            "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
            }
        },
        "storageneworexisting": {
            "defaultValue": "new",
            "type": "string",
            "metadata": {
                "description": "Determines whether or not a new storage account should be provisioned."
            }
        },
        "storageaccountname": {
            "defaultValue": "[concat('storage', uniqueString(resourceGroup().id))]",
            "type": "string",
            "metadata": {
                "description": "Name of the storage account"
            }
        },
        "storageaccounttype": {
            "defaultValue": "Standard_LRS",
            "type": "string",
            "metadata": {
                "description": "Storage account type"
            }
        },
        "virtualnetworkneworexisting": {
            "defaultValue": "new",
            "type": "string",
            "metadata": {
                "description": "Determines whether or not a new virtual network should be provisioned."
            }
        },
        "virtualnetworkname": {
            "defaultValue": "VirtualNetwork",
            "type": "string",
            "metadata": {
                "description": "Name of the virtual network"
            }
        },
        "addresspref": {
            "type": "string",
            "metadata": {
                "description": "Address prefix of the virtual network"
            }
        },
        "subnetname": {
            "defaultValue": "default",
            "type": "string",
            "metadata": {
                "description": "Name of the subnet"
            }
        },
        "subnetprefix": {
            "type": "string",
            "metadata": {
                "description": "Subnet prefix of the virtual network"
            }
        },
        "virtualnetworkresourcegroupName": {
            "defaultValue": "[resourceGroup().name]",
            "type": "string",
            "metadata": {
                "description": "Name of the resource group for the existing virtual network"
            }
        },
        "publicipneworexisting": {
            "defaultValue": "new",
            "type": "string",
            "metadata": {
                "description": "Determines whether or not a new public ip should be provisioned."
            }
        },
        "publicipname": {
            "defaultValue": "[concat(parameters('vmName'), '_Pip')]",
            "type": "string",
            "metadata": {
                "description": "Name of the public ip address"
            }
        },
        "publicipresourcegroupName": {
            "defaultValue": "[resourceGroup().name]",
            "type": "string",
            "metadata": {
                "description": "Name of the resource group for the public ip address"
            }
        },
        "NSGName": {
            "type": "string",
            "metadata": {
                "description": "Name of the NSG associated with the VNET"
            }
        }
    },
    "variables": {
        "nicName": "[concat(parameters('vmname'), '-nic')]",
        "publicIpAddressId": {
            "id": "[resourceId(parameters('publicipresourcegroupName'), 'Microsoft.Network/publicIPAddresses', parameters('publicipname'))]"
        },
        "networkSecurityGroupName": "[parameters('NSGName')]",
        "osDiskName": "[concat(parameters('vmname'), '_OSDisk')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2017-06-01",
            "name": "[parameters('storageaccountname')]",
            "location": "[parameters('loc')]",
            "sku": {
                "name": "[parameters('storageaccounttype')]"
            },
            "kind": "Storage",
            "condition": "[equals(parameters('storageneworexisting'), 'new')]"
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-09-01",
            "name": "[parameters('publicipname')]",
            "location": "[parameters('loc')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            },
            "condition": "[equals(parameters('publicipneworexisting'), 'new')]"
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-08-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[parameters('loc')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-22",
                        "properties": {
                            "priority": 1000,
                            "access": "Allow",
                            "direction": "Inbound",
                            "destinationPortRange": "22",
                            "protocol": "Tcp",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            },
            "condition": "[equals(parameters('virtualnetworkneworexisting'), 'new')]"
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2017-09-01",
            "name": "[parameters('virtualnetworkname')]",
            "location": "[parameters('loc')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": "[parameters('addresspref')]"
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetname')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetprefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                            }
                        }
                    }
                ]
            },
            "condition": "[equals(parameters('virtualnetworkneworexisting'), 'existing')]"
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-09-01",
            "name": "[variables('nicName')]",
            "location": "[parameters('loc')]",
            "dependsOn": [
                "[parameters('publicipname')]",
                "[parameters('virtualnetworkname')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId(parameters('virtualnetworkresourcegroupName'), 'Microsoft.Network/virtualNetworks/subnets/', parameters('virtualnetworkname'), parameters('subnetname'))]"
                            },
                            "publicIPAddress": "[if(not(equals(parameters('publicipneworexisting'), 'none')), variables('publicIpAddressId') , json('null'))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "name": "[parameters('vmname')]",
            "location": "[parameters('loc')]",
            "dependsOn": [
                "[parameters('storageaccountname')]",
                "[variables('nicName')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmsize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmname')]",
                    "adminUsername": "[parameters('adminusername')]",
                    "adminPassword": "[parameters('adminpassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[parameters('windowsosversion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[variables('osDiskName')]",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": false
                    }
                }
            }
        }
    ]
}
